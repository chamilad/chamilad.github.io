<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Monitoring on chamila.dev</title>
    <link>https://chamila.dev/tags/monitoring/</link>
    <description>Recent content in Monitoring on chamila.dev</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Mar 2020 13:37:33 +1300</lastBuildDate>
    <atom:link href="https://chamila.dev/tags/monitoring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Standalone Prometheus Exporter for Kibana</title>
      <link>https://chamila.dev/blog/2020-03-14_a-standalone-prometheus-exporter-for-kibana/</link>
      <pubDate>Sat, 14 Mar 2020 13:37:33 +1300</pubDate>
      <guid>https://chamila.dev/blog/2020-03-14_a-standalone-prometheus-exporter-for-kibana/</guid>
      <description>&lt;p&gt;I wrote a &lt;a href=&#34;https://github.com/chamilad/kibana-prometheus-exporter&#34;&gt;Prometheus Exporter that converts and exposes some metrics from Kibana API&lt;/a&gt;. This was mostly inspired by &lt;a href=&#34;https://github.com/pjhampton/kibana-prometheus-exporter/&#34;&gt;an already existing Exporter&lt;/a&gt;, that needs to be installed in Kibana as a Plugin. While that is a neat feature, managed ELK services like ElasticSearch Service by Elastic (commonly known as ElasticCloud) require another, more standalone approach.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kibana-exporter -kibana.uri http://localhost:5601 -kibana.username elastic -kibana.password password&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Exporter is pretty basic one written in less than 500 lines of collective Go code. The following metrics are exposed to be scraped by Prometheus.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Primer on Observability for Dynamic Organizations — Part 2</title>
      <link>https://chamila.dev/blog/2018-10-25_primer-on-observability-for-dynamic-organizationspart-2/</link>
      <pubDate>Thu, 25 Oct 2018 06:44:38 +0000</pubDate>
      <guid>https://chamila.dev/blog/2018-10-25_primer-on-observability-for-dynamic-organizationspart-2/</guid>
      <description>&lt;h4 id=&#34;what-should-an-observability-framework-address&#34;&gt;What should an Observability Framework address?&lt;/h4&gt;&#xA;&lt;p&gt;In the previous post, &lt;a href=&#34;https://chamila.dev/a-primer-on-observability-for-dynamic-organizations-part-1-43c577ded1d3&#34;&gt;we measured the temperature of the water on what Observability is and why it should be a first class consideration in system design&lt;/a&gt;. Let’s explore the possibility of a &lt;strong&gt;structured approach&lt;/strong&gt; for designing observable systems.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2018-10-25_primer-on-observability-for-dynamic-organizationspart-2_0.jpeg#layoutTextWidth&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;Massive industrial process of Sugar production where the mechanics are mostly literally behind 10-inch steel walls&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h4 id=&#34;why-should-there-be-a-structured-approach&#34;&gt;Why should there be a structured approach?&lt;/h4&gt;&#xA;&lt;p&gt;In short, because Observability has to be designed into a system rather than be considered as an on-the-spot hack.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Primer on Observability for Dynamic Organizations — Part 1</title>
      <link>https://chamila.dev/blog/2018-08-21_primer-on-observability-for-dynamic-organizations-part-1/</link>
      <pubDate>Tue, 21 Aug 2018 04:29:46 +0000</pubDate>
      <guid>https://chamila.dev/blog/2018-08-21_primer-on-observability-for-dynamic-organizations-part-1/</guid>
      <description>&lt;h4 id=&#34;a-introduction-to-the-buzzword-and-the-rationale-for-implementing-it&#34;&gt;A introduction to the buzzword and the rationale for implementing it&lt;/h4&gt;&#xA;&lt;h3 id=&#34;what-is-observability&#34;&gt;What is Observability?&lt;/h3&gt;&#xA;&lt;p&gt;Before we dive in to the waters, we need to define what observability is. Let’s go for some tweets first.&lt;/p&gt;&#xA;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Monitoring is for operating software/systems&lt;br&gt;Instrumentation is for writing software&lt;br&gt;Observability is for understanding systems&lt;/p&gt;&amp;mdash; Charity Majors (@mipsytipsy) &lt;a href=&#34;https://twitter.com/mipsytipsy/status/911711540008628224?ref_src=twsrc%5Etfw&#34;&gt;September 23, 2017&lt;/a&gt;&lt;/blockquote&gt;&#xA;&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&lt;p&gt;That’s &lt;a href=&#34;https://twitter.com/mipsytipsy/status/911711540008628224&#34;&gt;Charity Majors&lt;/a&gt;, a well known voice on Observability and someone who &lt;a href=&#34;https://www.honeycomb.io/&#34;&gt;has built a business&lt;/a&gt; doing it well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basic Process Metrics Collection and Visualization in Linux</title>
      <link>https://chamila.dev/blog/2018-05-15_basic-process-metrics-collection-and-visualization-in-linux/</link>
      <pubDate>Tue, 15 May 2018 06:36:59 +0000</pubDate>
      <guid>https://chamila.dev/blog/2018-05-15_basic-process-metrics-collection-and-visualization-in-linux/</guid>
      <description>&lt;p&gt;When it comes to deployment observability there are multiple, comprehensive solutions that can handle almost any system of scale you throw at them. I said almost, because there are certain stories that do not require setting up a central monitoring server with satellite agents to collect and enrich data.&lt;/p&gt;&#xA;&lt;p&gt;For an example, consider a scenario where you’re troubleshooting a certain single process for a particular period of time. You want to collect the approximate CPU usage, approximate memory usage, light weight process (aka thread) count, and the TCP connection count. You want these stats collected during the time period you’re conducting load test against the process.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
