<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Immutability on chamila.dev</title>
    <link>https://chamila.dev/tags/immutability/</link>
    <description>Recent content in Immutability on chamila.dev</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Oct 2019 18:15:19 +1300</lastBuildDate>
    <atom:link href="https://chamila.dev/tags/immutability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Server Immutability</title>
      <link>https://chamila.dev/blog/2018-05-17_server-immutability/</link>
      <pubDate>Thu, 17 May 2018 08:19:19 +0000</pubDate>
      <guid>https://chamila.dev/blog/2018-05-17_server-immutability/</guid>
      <description>&lt;p&gt;Server Immutability is an interesting concept that I managed to come across when I first started playing around with Containers. Interestingly, itâ€™s often used in conjunction with Containerization because of the use of startup file systems (or Images). However Server Immutability is something that goes beyond simple Docker images.&lt;/p&gt;&#xA;&lt;h4 id=&#34;what-is-immutability&#34;&gt;What is Immutability?&lt;/h4&gt;&#xA;&lt;p&gt;Immutability, when it comes to server instances, is not changing a once deployed instance. Any change that should be done, has to be done in a new version of the instance image and the old running instances should be replaced with the instances spawned from the new image.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
