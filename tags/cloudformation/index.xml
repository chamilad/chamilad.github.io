<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloudformation on blog.chamila.dev</title>
    <link>https://blog.chamila.dev/tags/cloudformation/</link>
    <description>Recent content in Cloudformation on blog.chamila.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Jul 2017 11:40:50 +0000</lastBuildDate>
    
	<atom:link href="https://blog.chamila.dev/tags/cloudformation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Infrastructure as Code : AWS CloudFormation</title>
      <link>https://blog.chamila.dev/post/2017-07-03_infrastructure-as-code-aws-cloudformation/</link>
      <pubDate>Mon, 03 Jul 2017 11:40:50 +0000</pubDate>
      
      <guid>https://blog.chamila.dev/post/2017-07-03_infrastructure-as-code-aws-cloudformation/</guid>
      <description>This blog post is based on a talk I did on AWS CloudFormation as an introduction.
 The case for Infrastructure as Code Imagine a typical deployment of a software stack. The process might look like the following.
 Design solution architecture Estimate infrastructure specs Configure compute, network, and database resources manually Deploy the applications and prepare databases Test and ship  Pretty simple from the looks of it doesn’t it?</description>
    </item>
    
  </channel>
</rss>