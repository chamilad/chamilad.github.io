<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Solution Architecture on blog.chamila.dev</title>
    <link>https://blog.chamila.dev/tags/solution-architecture/</link>
    <description>Recent content in Solution Architecture on blog.chamila.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Oct 2018 06:44:38 +0000</lastBuildDate><atom:link href="https://blog.chamila.dev/tags/solution-architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Primer on Observability for Dynamic Organizations — Part 2</title>
      <link>https://blog.chamila.dev/post/2018-10-25_primer-on-observability-for-dynamic-organizationspart-2/</link>
      <pubDate>Thu, 25 Oct 2018 06:44:38 +0000</pubDate>
      
      <guid>https://blog.chamila.dev/post/2018-10-25_primer-on-observability-for-dynamic-organizationspart-2/</guid>
      <description>What should an Observability Framework address? In the previous post, we measured the temperature of the water on what Observability is and why it should be a first class consideration in system design. Let’s explore the possibility of a structured approach for designing observable systems.
Why should there be a structured approach? In short, because Observability has to be designed into a system rather than be considered as an on-the-spot hack.</description>
    </item>
    
  </channel>
</rss>
