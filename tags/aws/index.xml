<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS on chamila.dev</title>
    <link>https://chamila.dev/tags/aws/</link>
    <description>Recent content in AWS on chamila.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Jan 2024 12:57:07 +1300</lastBuildDate><atom:link href="https://chamila.dev/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploying Rust on Lambda</title>
      <link>https://chamila.dev/blog/2024-01-16_deploying-rust-on-lambda/</link>
      <pubDate>Tue, 16 Jan 2024 12:57:07 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2024-01-16_deploying-rust-on-lambda/</guid>
      <description>Dead (not a professional opinion) Pine tree on the coastal California   Following up from the last post let&amp;rsquo;s explore how to use Rust in Lambda functions.
AWS has introduced a neat cargo command to make life easier and focus on building the business logic rather than get bogged down in deployment details. This is the cargo lambda command. Installing the command is pretty straightforward on a linux environment.</description>
    </item>
    
    <item>
      <title>Getting Started with AWS Rust SDK</title>
      <link>https://chamila.dev/blog/2024-01-15_getting-started-with-aws-rust-sdk/</link>
      <pubDate>Mon, 15 Jan 2024 05:26:45 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2024-01-15_getting-started-with-aws-rust-sdk/</guid>
      <description>Some building in Washington DC. It&amp;#39;s just pretty, not related to Rust or AWS   AWS re:Invent 2023 announced the GA versions of the Rust and Kotlin SDKs. The SDK was in developer preview for sometime, and this release allows the use of it in production. Following is an introduction to the Rust SDK, its defaults, and a few detailed scenarios that are different from the default cases.</description>
    </item>
    
    <item>
      <title>Information Security Compliance in AWS Solutions</title>
      <link>https://chamila.dev/blog/2023-06-04_information-security-compliance-in-aws-solutions/</link>
      <pubDate>Sun, 04 Jun 2023 19:30:02 +1200</pubDate>
      
      <guid>https://chamila.dev/blog/2023-06-04_information-security-compliance-in-aws-solutions/</guid>
      <description>Information Security Compliance can be a tiring and complicated exercise for all parties involved. Making a solution compliant for the set of security standards and controls is a massive effort, especially if the architecting stage did not think about these requirements in the first place.
It&amp;rsquo;s even more complex when it comes to proving the compliance level of the solution to internal or external auditors. The language InfoSec and Security Auditors speak is vastly different from the language used by engineers.</description>
    </item>
    
    <item>
      <title>Malware Protection on AWS</title>
      <link>https://chamila.dev/blog/2023-02-25_malware-protection-on-aws/</link>
      <pubDate>Sat, 25 Feb 2023 07:00:19 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2023-02-25_malware-protection-on-aws/</guid>
      <description>Point Dorset, Wellington   Malware protection in compute workloads in AWS is a topic that I&amp;rsquo;ve been looking into recently. After working with security auditors for a few weeks (adding up a few months now), I was essentially forced to evaluate all the possible scenarios for malware protection in AWS for typical workloads.
Typical Malware Protection Requirements The following key features can be identified as typical malware protection requirements for most solutions.</description>
    </item>
    
    <item>
      <title>AWS Backup: Cross-Account Backups</title>
      <link>https://chamila.dev/blog/2023-02-13_aws-backup-cross-account-backups/</link>
      <pubDate>Mon, 13 Feb 2023 23:29:05 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2023-02-13_aws-backup-cross-account-backups/</guid>
      <description>Mount Kaukau    Continuing from the previous article on introduction to AWS Backup
 Offsite Backups Let&amp;rsquo;s talk theory for a bit.
Data protection in a given solution depends on how thoughtful the backup strategy is. While a simple Backup Plan in AWS Backup that periodically takes a backup of the database into the Account-local Vault could technically be considered as a backup strategy, it is not a good one.</description>
    </item>
    
    <item>
      <title>AWS Backup: Introduction</title>
      <link>https://chamila.dev/blog/2023-01-18_aws-backup-intro/</link>
      <pubDate>Wed, 18 Jan 2023 09:14:05 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2023-01-18_aws-backup-intro/</guid>
      <description>What else is better than a photo of water being backed up - Birchville Dam   AWS Backup AWS Backup is a service introduced a few years ago to centrally manage backup options for various AWS services that deal with data persistence. These include RDS, DynamoDB, EBS, EFS, EC2, S3, and Amazon FSx. What was earlier at best by processes and architecture reviews and audits in different services with different strategies can be consolidated into a single service with a single Console.</description>
    </item>
    
    <item>
      <title>MLOps for Non-ML Engineers 03 - More Differences Between ML and SW Dev</title>
      <link>https://chamila.dev/blog/2022-11-25_mlops-for-non-ml-engineers-03/</link>
      <pubDate>Fri, 25 Nov 2022 06:37:25 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2022-11-25_mlops-for-non-ml-engineers-03/</guid>
      <description>Evans Bay, Wellington   How is Machine Learning Different?  Continuing comparison between Machine Learning and Software Development, from the previous article in the series.
 MLOps for Non-ML Engineers 01 - Introduction MLOps for Non-ML Engineers 02 - Differences Between ML and SW Dev MLOps for Non-ML Engineers 03 - More Differences Between ML and SW Dev MLOps for Non-ML Engineers 04 - Unique aspects of an ML Project Execution   Source Version Control Software development and version controlling is virtually impossible to separate.</description>
    </item>
    
    <item>
      <title>MLOps for Non-ML Engineers 02 - Differences Between ML and SW Dev</title>
      <link>https://chamila.dev/blog/2022-11-22_mlops-for-non-ml-engineers-02/</link>
      <pubDate>Tue, 22 Nov 2022 06:32:18 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2022-11-22_mlops-for-non-ml-engineers-02/</guid>
      <description>Lighthouse, Galle, Sri Lanka   How is Machine Learning Different?  Continuing comparison between Machine Learning and Software Development, from the previous article in the series.
 MLOps for Non-ML Engineers 01 - Introduction MLOps for Non-ML Engineers 02 - Differences Between ML and SW Dev MLOps for Non-ML Engineers 03 - More Differences Between ML and SW Dev MLOps for Non-ML Engineers 04 - Unique aspects of an ML Project Execution   Understanding the solution Various iterations of design and architecture of a software development project usually determines the approach of the solution for a software engineering problem.</description>
    </item>
    
    <item>
      <title>MLOps for Non-ML Engineers 01 - Introduction</title>
      <link>https://chamila.dev/blog/2022-11-19_mlops-for-non-ml-engineers/</link>
      <pubDate>Sat, 19 Nov 2022 05:49:28 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2022-11-19_mlops-for-non-ml-engineers/</guid>
      <description>Bixby Creek Bridge on CA-01 highway, Monterey, California    This is the first part of a series of posts on the topic.
 MLOps for Non-ML Engineers 01 - Introduction MLOps for Non-ML Engineers 02 - Differences Between ML and SW Dev MLOps for Non-ML Engineers 03 - More Differences Between ML and SW Dev MLOps for Non-ML Engineers 04 - Unique aspects of an ML Project Execution   Last year I had an opportunity to work with a team of Data Scientists on developing an Enterprise AI/ML practice.</description>
    </item>
    
    <item>
      <title>Rotating AWS Secrets Manager Secrets with Lambda</title>
      <link>https://chamila.dev/blog/2022-11-01_rotating-aws-secrets-manager-secrets-with-lambda/</link>
      <pubDate>Tue, 01 Nov 2022 07:09:49 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2022-11-01_rotating-aws-secrets-manager-secrets-with-lambda/</guid>
      <description>Again, the only photo with me for now that&amp;#39;s closest to the theme, a spider weaving a trap near Manigala, Sri Lanka   Secrets Manager secret types AWS Secret Manager supports a several types of secrets. These are mainly to support effective secret management by integrating them closer with the AWS Services they support. These are mainly various types of database services offered by AWS, which is one of the key uses for using Secrets Manager to manage master credentials.</description>
    </item>
    
    <item>
      <title>Server Immutability</title>
      <link>https://chamila.dev/blog/2018-05-17_server-immutability/</link>
      <pubDate>Thu, 17 May 2018 08:19:19 +0000</pubDate>
      
      <guid>https://chamila.dev/blog/2018-05-17_server-immutability/</guid>
      <description>Server Immutability is an interesting concept that I managed to come across when I first started playing around with Containers. Interestingly, itâ€™s often used in conjunction with Containerization because of the use of startup file systems (or Images). However Server Immutability is something that goes beyond simple Docker images.
What is Immutability? Immutability, when it comes to server instances, is not changing a once deployed instance. Any change that should be done, has to be done in a new version of the instance image and the old running instances should be replaced with the instances spawned from the new image.</description>
    </item>
    
    <item>
      <title>Subject Alternative Names in SSL Certificates</title>
      <link>https://chamila.dev/blog/2017-11-06_subject-alternative-names-in-ssl-certificates/</link>
      <pubDate>Mon, 06 Nov 2017 14:26:50 +0000</pubDate>
      
      <guid>https://chamila.dev/blog/2017-11-06_subject-alternative-names-in-ssl-certificates/</guid>
      <description>Or the SSL Cert Extension that saves your back during development
 I recently wrote an article on how to generate and upload a self-signed SSL Certificate to AWS Certificate Manager. One of the cases I had missed to address there was the inconsistency of the Load Balancer and development domain names during the early phases of any project. This is a practical issue, fortunately that an extension in the SSL Certificate standard addresses.</description>
    </item>
    
    <item>
      <title>Adding a Self-Signed SSL Certificate to AWS ACM</title>
      <link>https://chamila.dev/blog/2017-10-17_adding-a-selfsigned-ssl-certificate-to-aws-acm/</link>
      <pubDate>Tue, 17 Oct 2017 18:56:28 +0000</pubDate>
      
      <guid>https://chamila.dev/blog/2017-10-17_adding-a-selfsigned-ssl-certificate-to-aws-acm/</guid>
      <description>When setting up AWS Load Balancers (Classic Load Balancers or Application Load Balancers), after adding a HTTPS transport, an SSL Certificate should be added so that SSL termination can be done at the Load Balancer. Here, for development purposes, the certificate added can be a self-signed one.
However if you try to upload a self-signed SSL Certificate to IAM or ACM using the AWS Web Console during Load Balancer creation, you will frequently come across an error similar to the following.</description>
    </item>
    
    <item>
      <title>Infrastructure as Code : AWS CloudFormation</title>
      <link>https://chamila.dev/blog/2017-07-03_infrastructure-as-code-aws-cloudformation/</link>
      <pubDate>Mon, 03 Jul 2017 11:40:50 +0000</pubDate>
      
      <guid>https://chamila.dev/blog/2017-07-03_infrastructure-as-code-aws-cloudformation/</guid>
      <description>This blog post is based on a talk I did on AWS CloudFormation as an introduction.
  The case for Infrastructure asÂ Code Imagine a typical deployment of a software stack. The process might look like the following.
 Design solution architecture Estimate infrastructure specs Configure compute, network, and database resources manually Deploy the applications and prepare databases Test and ship  Pretty simple from the looks of it doesnâ€™t it?</description>
    </item>
    
  </channel>
</rss>
