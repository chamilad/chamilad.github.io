<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cargo on chamila.dev</title>
    <link>https://chamila.dev/tags/cargo/</link>
    <description>Recent content in cargo on chamila.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Jan 2024 12:57:07 +1300</lastBuildDate><atom:link href="https://chamila.dev/tags/cargo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploying Rust on Lambda</title>
      <link>https://chamila.dev/blog/2024-01-16_deploying-rust-on-lambda/</link>
      <pubDate>Tue, 16 Jan 2024 12:57:07 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2024-01-16_deploying-rust-on-lambda/</guid>
      <description>Dead (not a professional opinion) Pine tree on the coastal California   Following up from the last post let&amp;rsquo;s explore how to use Rust in Lambda functions.
AWS has introduced a neat cargo command to make life easier and focus on building the business logic rather than get bogged down in deployment details. This is the cargo lambda command. Installing the command is pretty straightforward on a linux environment.</description>
    </item>
    
  </channel>
</rss>
