<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on chamila.dev</title>
    <link>https://chamila.dev/tags/rust/</link>
    <description>Recent content in Rust on chamila.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jun 2024 05:34:43 +1200</lastBuildDate><atom:link href="https://chamila.dev/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Multiple AWS CLI Profiles in the Rust AWS SDK</title>
      <link>https://chamila.dev/blog/2024-06-01_rust-profiles-in-aws-sdk/</link>
      <pubDate>Sat, 01 Jun 2024 05:34:43 +1200</pubDate>
      
      <guid>https://chamila.dev/blog/2024-06-01_rust-profiles-in-aws-sdk/</guid>
      <description>I wrote a blog post on getting started with Rust AWS SDK a few months ago. I also started my youtube channel with a video on the same topic. If you haven&amp;rsquo;t yet seen it, my channel is sliced array (the name would probably change, but this is good enough for now).
One of the comments asked about how to use different AWS CLI profiles in the Rust SDK, and I did a follow up video on the topic.</description>
    </item>
    
    <item>
      <title>Deploying Rust on Lambda</title>
      <link>https://chamila.dev/blog/2024-01-16_deploying-rust-on-lambda/</link>
      <pubDate>Tue, 16 Jan 2024 12:57:07 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2024-01-16_deploying-rust-on-lambda/</guid>
      <description>Dead (not a professional opinion) Pine tree on the coastal California   Following up from the last post let&amp;rsquo;s explore how to use Rust in Lambda functions.
AWS has introduced a neat cargo command to make life easier and focus on building the business logic rather than get bogged down in deployment details. This is the cargo lambda command. Installing the command is pretty straightforward on a linux environment.</description>
    </item>
    
    <item>
      <title>Getting Started with AWS Rust SDK</title>
      <link>https://chamila.dev/blog/2024-01-15_getting-started-with-aws-rust-sdk/</link>
      <pubDate>Mon, 15 Jan 2024 05:26:45 +1300</pubDate>
      
      <guid>https://chamila.dev/blog/2024-01-15_getting-started-with-aws-rust-sdk/</guid>
      <description>Some building in Washington DC. It&amp;#39;s just pretty, not related to Rust or AWS   AWS re:Invent 2023 announced the GA versions of the Rust and Kotlin SDKs. The SDK was in developer preview for sometime, and this release allows the use of it in production. Following is an introduction to the Rust SDK, its defaults, and a few detailed scenarios that are different from the default cases.</description>
    </item>
    
    <item>
      <title>Pi-hole Restore CLI Tool</title>
      <link>https://chamila.dev/blog/2023-06-19_pi-hole-restore-cli-tool/</link>
      <pubDate>Mon, 19 Jun 2023 00:09:59 +1200</pubDate>
      
      <guid>https://chamila.dev/blog/2023-06-19_pi-hole-restore-cli-tool/</guid>
      <description>A loading tunnel in Wrights Hill Fortress   I made a thing (this time more niche than the last project).
I&amp;rsquo;ve been using Pi-hole as a DNS ad-blocker and an overall local DNS solution for about two years now. I lived dangerously for most of this time with only a single old Raspberry Pi 2 with Pi-hole in it as the sole DNS server for the local network.</description>
    </item>
    
  </channel>
</rss>
