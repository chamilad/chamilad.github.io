<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on chamila.dev</title>
    <link>https://chamila.dev/tags/rust/</link>
    <description>Recent content in Rust on chamila.dev</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jun 2024 05:34:43 +1200</lastBuildDate>
    <atom:link href="https://chamila.dev/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Multiple AWS CLI Profiles in the Rust AWS SDK</title>
      <link>https://chamila.dev/blog/2024-06-01_rust-profiles-in-aws-sdk/</link>
      <pubDate>Sat, 01 Jun 2024 05:34:43 +1200</pubDate>
      <guid>https://chamila.dev/blog/2024-06-01_rust-profiles-in-aws-sdk/</guid>
      <description>&lt;p&gt;I wrote a &lt;a href=&#34;https://chamila.dev/blog/2024-01-15_getting-started-with-aws-rust-sdk/&#34;&gt;blog post on getting started with Rust AWS SDK a few months&#xA;ago&lt;/a&gt;. I&#xA;also started my youtube channel with a video on the same topic. If you haven&amp;rsquo;t&#xA;yet seen it, my channel is &lt;a href=&#34;https://www.youtube.com/channel/UCATSehvfY6mjOHbfYlH7z_A&#34;&gt;&lt;code&gt;sliced array&lt;/code&gt;&lt;/a&gt; (the name would probably change, but&#xA;this is good enough for now).&lt;/p&gt;&#xA;&lt;p&gt;One of the comments asked about how to use different &lt;a href=&#34;https://docs.aws.amazon.com/cli/v1/userguide/cli-configure-files.html&#34;&gt;AWS CLI&#xA;profiles&lt;/a&gt; in the&#xA;Rust SDK, and I did a follow up video on the topic. This post is a&#xA;supplementary post for that video.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying Rust on Lambda</title>
      <link>https://chamila.dev/blog/2024-01-16_deploying-rust-on-lambda/</link>
      <pubDate>Tue, 16 Jan 2024 12:57:07 +1300</pubDate>
      <guid>https://chamila.dev/blog/2024-01-16_deploying-rust-on-lambda/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2024-01-16_header.jpeg&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;Dead (not a professional opinion) Pine tree on the coastal California&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Following up from the &lt;a href=&#34;https://chamila.dev/blog/2024-01-15_getting-started-with-aws-rust-sdk/&#34;&gt;last post&lt;/a&gt;&#xA;let&amp;rsquo;s explore how to use Rust in Lambda functions.&lt;/p&gt;&#xA;&lt;p&gt;AWS has introduced a neat &lt;code&gt;cargo&lt;/code&gt; command to make life easier and focus on&#xA;building the business logic rather than get bogged down in deployment details.&#xA;This is the &lt;a href=&#34;https://www.cargo-lambda.info/guide/getting-started.html&#34;&gt;&lt;code&gt;cargo lambda&lt;/code&gt;&#xA;command&lt;/a&gt;. Installing&#xA;the command is pretty straightforward on a linux environment.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip3 install cargo-lambda&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;One detail to note is that &lt;code&gt;cargo lambda&lt;/code&gt; command uses &lt;code&gt;zig&lt;/code&gt; toolchain to&#xA;facilitate cross compiling the Rust code. This is important because Rust in&#xA;Lambda runs on the OS only runtimes which run on &lt;a href=&#34;https://docs.aws.amazon.com/lambda/latest/dg/runtimes-provided.html&#34;&gt;Amazon Linux&#xA;versions&lt;/a&gt;.&#xA;So, unless you&amp;rsquo;re developing on a Linux workstation, chances are you&amp;rsquo;d probably&#xA;be cross compiling your code. &lt;code&gt;zig&lt;/code&gt; toolchain is used because it comes built in&#xA;with the &lt;code&gt;cargo-zigbuild&lt;/code&gt; crate. More information on cross-compiling and known&#xA;issues can be found &lt;a href=&#34;https://www.cargo-lambda.info/guide/cross-compiling.html&#34;&gt;on the&#xA;documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started with AWS Rust SDK</title>
      <link>https://chamila.dev/blog/2024-01-15_getting-started-with-aws-rust-sdk/</link>
      <pubDate>Mon, 15 Jan 2024 05:26:45 +1300</pubDate>
      <guid>https://chamila.dev/blog/2024-01-15_getting-started-with-aws-rust-sdk/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2024-01-15_aws_rust_sdk_header.jpg&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;Some building in Washington DC. It&amp;#39;s just pretty, not related to Rust or AWS&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;AWS re:Invent 2023 announced &lt;a href=&#34;https://aws.amazon.com/about-aws/whats-new/2023/11/aws-sdk-rust/&#34;&gt;the GA versions of the&#xA;Rust&lt;/a&gt; and&#xA;Kotlin SDKs. The SDK was in developer preview for sometime, and this release&#xA;allows the use of it in production. Following is an introduction to&#xA;the Rust SDK, its defaults, and a few detailed scenarios that are different&#xA;from the default cases.&lt;/p&gt;&#xA;&lt;p&gt;The working code for the following examples are in&#xA;&lt;a href=&#34;https://github.com/chamilad/aws-rust-hello-world&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pi-hole Restore CLI Tool</title>
      <link>https://chamila.dev/blog/2023-06-19_pi-hole-restore-cli-tool/</link>
      <pubDate>Mon, 19 Jun 2023 00:09:59 +1200</pubDate>
      <guid>https://chamila.dev/blog/2023-06-19_pi-hole-restore-cli-tool/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2023-06-19_pihole_restore.png&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;A loading tunnel in Wrights Hill Fortress&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;I made a thing (this time more niche than the last project).&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve been using Pi-hole as a DNS ad-blocker and an overall local DNS&#xA;solution for about two years now. I lived dangerously for most of this time&#xA;with only a single old Raspberry Pi 2 with Pi-hole in it as the sole DNS server for&#xA;the local network.&lt;/p&gt;&#xA;&lt;p&gt;That changed recently when I added another couple of Docker containers as&#xA;Pi-hole servers to the network.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
