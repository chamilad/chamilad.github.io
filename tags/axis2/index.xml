<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Axis2 on chamila.dev</title>
    <link>https://chamila.dev/tags/axis2/</link>
    <description>Recent content in Axis2 on chamila.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Jul 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chamila.dev/tags/axis2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Consuming a Service Secured by WSO2 ESB</title>
      <link>https://chamila.dev/posts/2014-07-19_consuming-a-service-secured-by-wso2-esb/</link>
      <pubDate>Sat, 19 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://chamila.dev/posts/2014-07-19_consuming-a-service-secured-by-wso2-esb/</guid>
      <description>In the last post I explained the steps needed, although somewhat minimal, to secure an unsecured backend service with WSO2 ESB. In this post I will continue on to the client side of the communication explaining the minimal client needed to communicate with the secure proxy service we created and take a peak at the action going on under the hood.
UsernameToken Before we dive in to the client side code let’s take a look at the WS-Policy for the UsernameToken security we applied to our service.</description>
    </item>
    
    <item>
      <title>Creating a Web Service Using Apache Axis2</title>
      <link>https://chamila.dev/posts/2014-07-01_creating-a-web-service-using-apache-axis2/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://chamila.dev/posts/2014-07-01_creating-a-web-service-using-apache-axis2/</guid>
      <description>Prerequisites We need Apache Axis2 running and a suitable container. You could also run Axis2 as a standalone server but for this let’s use Tomcat as a container. So in the following order
 Download and install Oracle JDK7 Download and install Tomcat 7 (even 8 would do, but it seems as of now Tomcat 8 isn’t being supported by Eclipse, so let’s go with version 7) Download and install Axis2 on Tomcat  Oracle JDK7 Download and extract the JDK tarball.</description>
    </item>
    
  </channel>
</rss>