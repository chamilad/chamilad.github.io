<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on chamila.dev</title>
    <link>https://chamila.dev/tags/security/</link>
    <description>Recent content in Security on chamila.dev</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Aug 2025 14:11:38 +1200</lastBuildDate>
    <atom:link href="https://chamila.dev/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Securely Design and Build Cloud Applications</title>
      <link>https://chamila.dev/blog/2025-08-13_how-to-build-secure-cloud-applications/</link>
      <pubDate>Wed, 13 Aug 2025 14:11:38 +1200</pubDate>
      <guid>https://chamila.dev/blog/2025-08-13_how-to-build-secure-cloud-applications/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/eDwrs9_Yf2o?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;In the last post/video, I tried to replicate the stupidity of (almost)&#xA;intentionally exposing your private user data as a public bucket/database.&#xA;While it felt great to reinforce my belief that Cloud is relatively safe by&#xA;itself, to reinforce my ego to know at least I&amp;rsquo;m not that stupid, I did&#xA;feel a little incomplete. I broke down what could&amp;rsquo;ve possibly gone wrong, but I&#xA;didn&amp;rsquo;t show how to fix it, or prevent that from happening.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Authentication for K8s: EKS Pod Identities Deep Dive</title>
      <link>https://chamila.dev/blog/2025-02-01_aws-authentication-for-k8s-eks-pod-identities-deep-dive/</link>
      <pubDate>Sat, 01 Feb 2025 00:04:06 +1300</pubDate>
      <guid>https://chamila.dev/blog/2025-02-01_aws-authentication-for-k8s-eks-pod-identities-deep-dive/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/bDsy21eTXHw?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;In the last article, I covered in brief, the solutions for the problem of&#xA;authenticating into AWS from K8s workloads. This is the first detailed article&#xA;(and the video) I promised I&amp;rsquo;ll follow up that with, going into to details on&#xA;EKS Pod Identities. I&amp;rsquo;m hoping to make this the most detailed, most in-depth&#xA;video on the topic, but this article would probably have less details, so I&#xA;highly recommend watching the video. It also has a full demo on how to create&#xA;an EKS cluster for Pod Identities.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Authentication for K8s: Introduction</title>
      <link>https://chamila.dev/blog/2025-01-27_aws-authentication-for-k8s-introduction/</link>
      <pubDate>Mon, 27 Jan 2025 00:01:44 +1300</pubDate>
      <guid>https://chamila.dev/blog/2025-01-27_aws-authentication-for-k8s-introduction/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/8Ym1tAZRyyM?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;This is an introductory post on the problem of authenticating into AWS from K8s&#xA;workloads, either from within AWS or from outside of it. I&amp;rsquo;m going to discuss&#xA;three major approaches to this problem and compare them against each other.&#xA;I&amp;rsquo;ll follow this up with more detailed articles (and videos) on each approach,&#xA;where I&amp;rsquo;ll go into details as much as possible.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deep Dive in to AWS Resource Control Policies</title>
      <link>https://chamila.dev/blog/2024-12-15_deep-dive-in-to-aws-resource-control-policies/</link>
      <pubDate>Sun, 15 Dec 2024 23:35:34 +1300</pubDate>
      <guid>https://chamila.dev/blog/2024-12-15_deep-dive-in-to-aws-resource-control-policies/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/dLA8R3M-cVU?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;This article is on one of the new features AWS released recently, called&#xA;&lt;a href=&#34;https://aws.amazon.com/blogs/aws/introducing-resource-control-policies-rcps-a-new-authorization-policy/&#34;&gt;Resource Control Policies&#xA;(RCPs)&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;RCPs are a new way to enforce policies on data (resources) rather than&#xA;principals in AWS. For principals, the way to enforce policies is to use&#xA;Service Control Policies (SCPs), which if you&amp;rsquo;re already familiar with AWS&#xA;would know plenty about. However, RCPs can still be a little confusing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deriving AWS Account ID from Access Key</title>
      <link>https://chamila.dev/blog/2024-03-11_deriving-aws-account-id-from-access-key/</link>
      <pubDate>Mon, 11 Mar 2024 17:04:21 +1300</pubDate>
      <guid>https://chamila.dev/blog/2024-03-11_deriving-aws-account-id-from-access-key/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/sXQ2NfMnt5k?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;AWS Account IDs are interesting. They are not directly considered as sensitive,&#xA;but on the other hand everyone seems to consider them as sensitive.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s probably for good reason. You shouldn&amp;rsquo;t give out anything that isn&amp;rsquo;t&#xA;needed to get work done, even if those data are not &amp;ldquo;sensitive&amp;rdquo; in particular.&#xA;Your name isn&amp;rsquo;t sensitive in particular, but you don&amp;rsquo;t usually walk around with your name on your tshirt either.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
