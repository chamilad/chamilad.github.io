<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>K8s on chamila.dev</title>
    <link>https://chamila.dev/tags/k8s/</link>
    <description>Recent content in K8s on chamila.dev</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Feb 2025 00:04:06 +1300</lastBuildDate>
    <atom:link href="https://chamila.dev/tags/k8s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Authentication for K8s: EKS Pod Identities Deep Dive</title>
      <link>https://chamila.dev/blog/2025-02-01_aws-authentication-for-k8s-eks-pod-identities-deep-dive/</link>
      <pubDate>Sat, 01 Feb 2025 00:04:06 +1300</pubDate>
      <guid>https://chamila.dev/blog/2025-02-01_aws-authentication-for-k8s-eks-pod-identities-deep-dive/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/bDsy21eTXHw?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;In the last article, I covered in brief, the solutions for the problem of&#xA;authenticating into AWS from K8s workloads. This is the first detailed article&#xA;(and the video) I promised I&amp;rsquo;ll follow up that with, going into to details on&#xA;EKS Pod Identities. I&amp;rsquo;m hoping to make this the most detailed, most in-depth&#xA;video on the topic, but this article would probably have less details, so I&#xA;highly recommend watching the video. It also has a full demo on how to create&#xA;an EKS cluster for Pod Identities.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Authentication for K8s: Introduction</title>
      <link>https://chamila.dev/blog/2025-01-27_aws-authentication-for-k8s-introduction/</link>
      <pubDate>Mon, 27 Jan 2025 00:01:44 +1300</pubDate>
      <guid>https://chamila.dev/blog/2025-01-27_aws-authentication-for-k8s-introduction/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/8Ym1tAZRyyM?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;This is an introductory post on the problem of authenticating into AWS from K8s&#xA;workloads, either from within AWS or from outside of it. I&amp;rsquo;m going to discuss&#xA;three major approaches to this problem and compare them against each other.&#xA;I&amp;rsquo;ll follow this up with more detailed articles (and videos) on each approach,&#xA;where I&amp;rsquo;ll go into details as much as possible.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Standalone Prometheus Exporter for Kibana</title>
      <link>https://chamila.dev/blog/2020-03-14_a-standalone-prometheus-exporter-for-kibana/</link>
      <pubDate>Sat, 14 Mar 2020 13:37:33 +1300</pubDate>
      <guid>https://chamila.dev/blog/2020-03-14_a-standalone-prometheus-exporter-for-kibana/</guid>
      <description>&lt;p&gt;I wrote a &lt;a href=&#34;https://github.com/chamilad/kibana-prometheus-exporter&#34;&gt;Prometheus Exporter that converts and exposes some metrics from Kibana API&lt;/a&gt;. This was mostly inspired by &lt;a href=&#34;https://github.com/pjhampton/kibana-prometheus-exporter/&#34;&gt;an already existing Exporter&lt;/a&gt;, that needs to be installed in Kibana as a Plugin. While that is a neat feature, managed ELK services like ElasticSearch Service by Elastic (commonly known as ElasticCloud) require another, more standalone approach.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kibana-exporter -kibana.uri http://localhost:5601 -kibana.username elastic -kibana.password password&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Exporter is pretty basic one written in less than 500 lines of collective Go code. The following metrics are exposed to be scraped by Prometheus.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Authentication and Authorization for ElasticSearch: 03 - Multi-Tenancy with KeyCloak and Kibana</title>
      <link>https://chamila.dev/blog/2020-02-12_authentication-and-authorization-for-elasticsearch-03---multi-tenancy-with-keycloak-and-kibana/</link>
      <pubDate>Wed, 12 Feb 2020 07:07:35 +1300</pubDate>
      <guid>https://chamila.dev/blog/2020-02-12_authentication-and-authorization-for-elasticsearch-03---multi-tenancy-with-keycloak-and-kibana/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2020-02-12_multitenant_sso_header.jpg&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;Horton Plains at sunrise, Sri Lanka&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This is a continuation of the addendum to a series of articles on ELK on K8s.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/elasticsearch-on-k8s-01-basic-design-ecfdaccbb63a&#34;&gt;ElasticSearch on K8s: 01 — Basic Design&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-09-21_elasticsearch-on-k8s-02log-collection-with-filebeat/&#34;&gt;ElasticSearch on K8s: 02 — Log Collection with Filebeat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-22_elasticsearch-on-k8s-03-log-enrichment-with-logstash/&#34;&gt;ElasticSearch on K8s: 03 - Log Enrichment with Logstash&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-23_elasticsearch-on-k8s-04-log-storage-and-search-with-elasticsearch/&#34;&gt;ElasticSearch on K8s: 04 - Log Storage and Search with ElasticSearch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-25_elasticsearch-on-k8s-05-visualization-and-production-readying/&#34;&gt;ElasticSearch on K8s: 05 - Visualization and Production Readying&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-26_elasticsearch-index-management/&#34;&gt;ElasticSearch Index Management&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-27_authentication-and-authorization-for-elasticsearch-01-a-blueprint-for-multi-tenant-sso/&#34;&gt;Authentication and Authorization for ElasticSearch: 01 - A Blueprint for Multi-tenant SSO&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-10_authentication-and-authorization-for-elasticsearch-02-basic-sso-with-role-assignment/&#34;&gt;Authentication and Authorization for ElasticSearch: 02 - Basic SSO with Role Assignment&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Authentication and Authorization for ElasticSearch: 03 - Multi-Tenancy with KeyCloak and Kibana&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-10_authentication-and-authorization-for-elasticsearch-02-basic-sso-with-role-assignment/&#34;&gt;The previous post on this series&lt;/a&gt; was about enabling SSO between Kibana and KeyCloak. However, it did not address any concerns about multi-tenancy with SSO. This article aims to come up with a design for a multi-tenant SSO solution for Kibana with KeyCloak.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Authentication and Authorization for ElasticSearch: 02 - Basic SSO with Role Assignment</title>
      <link>https://chamila.dev/blog/2020-02-10_authentication-and-authorization-for-elasticsearch-02---basic-sso-with-role-assignment/</link>
      <pubDate>Mon, 10 Feb 2020 20:26:46 +1300</pubDate>
      <guid>https://chamila.dev/blog/2020-02-10_authentication-and-authorization-for-elasticsearch-02---basic-sso-with-role-assignment/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2020-02-10_authn_authr_elk_02_header.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This is a continuation of the addendum to a series of articles on ELK on K8s.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/elasticsearch-on-k8s-01-basic-design-ecfdaccbb63a&#34;&gt;ElasticSearch on K8s: 01 — Basic Design&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-09-21_elasticsearch-on-k8s-02log-collection-with-filebeat/&#34;&gt;ElasticSearch on K8s: 02 — Log Collection with Filebeat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-22_elasticsearch-on-k8s-03-log-enrichment-with-logstash/&#34;&gt;ElasticSearch on K8s: 03 - Log Enrichment with Logstash&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-23_elasticsearch-on-k8s-04-log-storage-and-search-with-elasticsearch/&#34;&gt;ElasticSearch on K8s: 04 - Log Storage and Search with ElasticSearch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-25_elasticsearch-on-k8s-05-visualization-and-production-readying/&#34;&gt;ElasticSearch on K8s: 05 - Visualization and Production Readying&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-26_elasticsearch-index-management/&#34;&gt;ElasticSearch Index Management&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-27_authentication-and-authorization-for-elasticsearch-01-a-blueprint-for-multi-tenant-sso/&#34;&gt;Authentication and Authorization for ElasticSearch: 01 - A Blueprint for Multi-tenant SSO&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Authentication and Authorization for ElasticSearch: 02 - Basic SSO with Role Assignment&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-12_authentication-and-authorization-for-elasticsearch-03-multi-tenancy-with-keycloak-and-kibana/&#34;&gt;Authentication and Authorization for ElasticSearch: 03 - Multi-Tenancy with KeyCloak and Kibana&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;As discussed in the last article, I will try to lay out the configuration details of a usable SSO based authn/authr design for an ELK deployment. Note that for certain features mentioned in this article to work, some features that are in the paid ElasticSearch tiers have to be available.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Authentication and Authorization for ElasticSearch: 01 - A Blueprint for Multi-tenant SSO</title>
      <link>https://chamila.dev/blog/2019-11-27_authentication-and-authorization-for-elasticsearch-01---a-blueprint-for-multi-tenant-sso/</link>
      <pubDate>Wed, 27 Nov 2019 19:43:20 +1300</pubDate>
      <guid>https://chamila.dev/blog/2019-11-27_authentication-and-authorization-for-elasticsearch-01---a-blueprint-for-multi-tenant-sso/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2019-11-27_header.jpg&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;Point Sur, Cali 01&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;I just completed a mini article series on details of deploying an ELK stack on K8s. Following are the links to the series.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/elasticsearch-on-k8s-01-basic-design-ecfdaccbb63a&#34;&gt;ElasticSearch on K8s: 01 — Basic Design&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-09-21_elasticsearch-on-k8s-02log-collection-with-filebeat/&#34;&gt;ElasticSearch on K8s: 02 — Log Collection with Filebeat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-22_elasticsearch-on-k8s-03-log-enrichment-with-logstash/&#34;&gt;ElasticSearch on K8s: 03 - Log Enrichment with Logstash&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-23_elasticsearch-on-k8s-04-log-storage-and-search-with-elasticsearch/&#34;&gt;ElasticSearch on K8s: 04 - Log Storage and Search with ElasticSearch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-25_elasticsearch-on-k8s-05-visualization-and-production-readying/&#34;&gt;ElasticSearch on K8s: 05 - Visualization and Production Readying&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamilad.github.io/post/2019-11-26_elasticsearch-index-management/&#34;&gt;ElasticSearch Index Management&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Authentication and Authorization for ElasticSearch: 01 - A Blueprint for Multi-tenant SSO&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-10_authentication-and-authorization-for-elasticsearch-02-basic-sso-with-role-assignment/&#34;&gt;Authentication and Authorization for ElasticSearch: 02 - Basic SSO with Role Assignment&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-12_authentication-and-authorization-for-elasticsearch-03-multi-tenancy-with-keycloak-and-kibana/&#34;&gt;Authentication and Authorization for ElasticSearch: 03 - Multi-Tenancy with KeyCloak and Kibana&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;So far, the articles have been discussing points related to functional requirements of a Log Aggregation stack deployed on K8s. The functionalities involved ELK core functions and how to mix and match K8s features to get the best out of the core ELK features. After getting the stack to receive and store logs, there are parallels that should be addressed. User management is one these critical features that this article will be discussing about.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ElasticSearch Index Management</title>
      <link>https://chamila.dev/blog/2019-11-26_elasticsearch-index-management/</link>
      <pubDate>Tue, 26 Nov 2019 22:03:00 +1300</pubDate>
      <guid>https://chamila.dev/blog/2019-11-26_elasticsearch-index-management/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2019-11-26_elasticsearch-index-management_01.jpeg&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;The comms tower on top of Riverston, Sri Lanka&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;As the series on ElasticSearch deployment management in K8s is complete, I thought of writing down some of the Index Management tasks that I had to implement in order to reduce the manual work involved in cluster maintenance.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Following is the series of posts on ElasticSearch on K8s.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/elasticsearch-on-k8s-01-basic-design-ecfdaccbb63a&#34;&gt;ElasticSearch on K8s: 01 — Basic Design&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-09-21_elasticsearch-on-k8s-02log-collection-with-filebeat/&#34;&gt;ElasticSearch on K8s: 02 — Log Collection with Filebeat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-22_elasticsearch-on-k8s-03-log-enrichment-with-logstash/&#34;&gt;ElasticSearch on K8s: 03 - Log Enrichment with Logstash&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-23_elasticsearch-on-k8s-04-log-storage-and-search-with-elasticsearch/&#34;&gt;ElasticSearch on K8s: 04 - Log Storage and Search with ElasticSearch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-25_elasticsearch-on-k8s-05-visualization-and-production-readying/&#34;&gt;ElasticSearch on K8s: 05 - Visualization and Production Readying&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;ElasticSearch Index Management&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-27_authentication-and-authorization-for-elasticsearch-01-a-blueprint-for-multi-tenant-sso/&#34;&gt;Authentication and Authorization for ElasticSearch: 01 - A Blueprint for Multi-tenant SSO&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-10_authentication-and-authorization-for-elasticsearch-02-basic-sso-with-role-assignment/&#34;&gt;Authentication and Authorization for ElasticSearch: 02 - Basic SSO with Role Assignment&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-12_authentication-and-authorization-for-elasticsearch-03-multi-tenancy-with-keycloak-and-kibana/&#34;&gt;Authentication and Authorization for ElasticSearch: 03 - Multi-Tenancy with KeyCloak and Kibana&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;The following management steps are not mandatory to be implemented in a cluster to be production ready, however having them in place would greatly reduce some of the common headaches involved in an ELK stack management.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ElasticSearch on K8s: 05 - Visualization and Production Readying</title>
      <link>https://chamila.dev/blog/2019-11-25_elasticsearch-on-k8s-05---visualization-and-production-readying/</link>
      <pubDate>Mon, 25 Nov 2019 22:29:57 +1300</pubDate>
      <guid>https://chamila.dev/blog/2019-11-25_elasticsearch-on-k8s-05---visualization-and-production-readying/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2019-11-25_elasticsearch-on-k8s-05_01.jpeg&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;Woolshed Hut on Mt. Somers&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This is part of a series of short articles on setting up an ELK deployment on K8s.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/elasticsearch-on-k8s-01-basic-design-ecfdaccbb63a&#34;&gt;ElasticSearch on K8s: 01 — Basic Design&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-09-21_elasticsearch-on-k8s-02log-collection-with-filebeat/&#34;&gt;ElasticSearch on K8s: 02 — Log Collection with Filebeat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-22_elasticsearch-on-k8s-03-log-enrichment-with-logstash/&#34;&gt;ElasticSearch on K8s: 03 - Log Enrichment with Logstash&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-23_elasticsearch-on-k8s-04-log-storage-and-search-with-elasticsearch/&#34;&gt;ElasticSearch on K8s: 04 - Log Storage and Search with ElasticSearch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;ElasticSearch on K8s: 05 - Visualization and Production Readying&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-26_elasticsearch-index-management/&#34;&gt;ElasticSearch Index Management&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-27_authentication-and-authorization-for-elasticsearch-01-a-blueprint-for-multi-tenant-sso/&#34;&gt;Authentication and Authorization for ElasticSearch: 01 - A Blueprint for Multi-tenant SSO&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-10_authentication-and-authorization-for-elasticsearch-02-basic-sso-with-role-assignment/&#34;&gt;Authentication and Authorization for ElasticSearch: 02 - Basic SSO with Role Assignment&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-12_authentication-and-authorization-for-elasticsearch-03-multi-tenancy-with-keycloak-and-kibana/&#34;&gt;Authentication and Authorization for ElasticSearch: 03 - Multi-Tenancy with KeyCloak and Kibana&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;visualization&#34;&gt;Visualization&lt;/h1&gt;&#xA;&lt;p&gt;Kibana is a web application which can be used to query data from an ElasticSearch cluster. It does so through issuing queries to the ElasticSearch cluster through the REST API. Additionally it also acts as a widget and dashboard server that can be used to visualize specific queries, as well as a management frontend that can perform several actions like role and user management that are a lot cumbersome to do so through the ElasticSearch REST API. Kibana itself doesn’t have a requirement for persistence as it uses ElasticSearch itself as a persistence layer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ElasticSearch on K8s: 04 - Log Storage and Search with ElasticSearch</title>
      <link>https://chamila.dev/blog/2019-11-23_elasticsearch-on-k8s-04---log-storage-and-search-with-elasticsearch/</link>
      <pubDate>Sat, 23 Nov 2019 16:01:40 +1300</pubDate>
      <guid>https://chamila.dev/blog/2019-11-23_elasticsearch-on-k8s-04---log-storage-and-search-with-elasticsearch/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2019-11-23_elasticsearch-on-k8s-04_01.jpeg&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;The morning shadow on the lower mountaineous plain beside Adam&amp;#39;s Peak, Sri Lanka&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This is part of a series of short articles on setting up an ELK deployment on K8s.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/elasticsearch-on-k8s-01-basic-design-ecfdaccbb63a&#34;&gt;ElasticSearch on K8s: 01 — Basic Design&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-09-21_elasticsearch-on-k8s-02log-collection-with-filebeat/&#34;&gt;ElasticSearch on K8s: 02 — Log Collection with Filebeat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-22_elasticsearch-on-k8s-03-log-enrichment-with-logstash/&#34;&gt;ElasticSearch on K8s: 03 - Log Enrichment with Logstash&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;ElasticSearch on K8s: 04 - Log Storage and Search with ElasticSearch&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-25_elasticsearch-on-k8s-05-visualization-and-production-readying&#34;&gt;ElasticSearch on K8s: 05 - Visualization and Production Readying&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-26_elasticsearch-index-management/&#34;&gt;ElasticSearch Index Management&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-27_authentication-and-authorization-for-elasticsearch-01-a-blueprint-for-multi-tenant-sso/&#34;&gt;Authentication and Authorization for ElasticSearch: 01 - A Blueprint for Multi-tenant SSO&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-10_authentication-and-authorization-for-elasticsearch-02-basic-sso-with-role-assignment/&#34;&gt;Authentication and Authorization for ElasticSearch: 02 - Basic SSO with Role Assignment&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-12_authentication-and-authorization-for-elasticsearch-03-multi-tenancy-with-keycloak-and-kibana/&#34;&gt;Authentication and Authorization for ElasticSearch: 03 - Multi-Tenancy with KeyCloak and Kibana&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;storage-and-indexing&#34;&gt;Storage and Indexing&lt;/h1&gt;&#xA;&lt;p&gt;Now that the logs are translated into a meaningful set of data, it’s time to store and index them for querying. ElasticSearch is the tool of choice, the main attraction of the stack to be honest. It’s an efficient useful tool to store and index unstructured data. How ElasticSearch&amp;rsquo;s design (which is something that was done in a time when &lt;em&gt;Docker was not even invented yet&lt;/em&gt;) is matched to K8s is an interesting story of itself.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ElasticSearch on K8s: 03 - Log Enrichment with Logstash</title>
      <link>https://chamila.dev/blog/2019-11-22_elasticsearch-on-k8s-03-log-enrichment-with-logstash/</link>
      <pubDate>Fri, 22 Nov 2019 01:05:37 +1300</pubDate>
      <guid>https://chamila.dev/blog/2019-11-22_elasticsearch-on-k8s-03-log-enrichment-with-logstash/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2019-11-22_elasticsearch-on-k8s-03_01.jpeg#layoutOutsetCenter&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;A stash of sugar cane ready to be processed into sugar and Arrack&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This is part of a series of short articles on setting up an ELK deployment on K8s.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/elasticsearch-on-k8s-01-basic-design-ecfdaccbb63a&#34;&gt;ElasticSearch on K8s: 01 — Basic Design&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-09-21_elasticsearch-on-k8s-02log-collection-with-filebeat/&#34;&gt;ElasticSearch on K8s: 02 — Log Collection with Filebeat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;ElasticSearch on K8s: 03 - Log Enrichment with Logstash&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-23_elasticsearch-on-k8s-04-log-storage-and-search-with-elasticsearch/&#34;&gt;ElasticSearch on K8s: 04 - Log Storage and Search with ElasticSearch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-25_elasticsearch-on-k8s-05-visualization-and-production-readying&#34;&gt;ElasticSearch on K8s: 05 - Visualization and Production Readying&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-26_elasticsearch-index-management/&#34;&gt;ElasticSearch Index Management&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-27_authentication-and-authorization-for-elasticsearch-01-a-blueprint-for-multi-tenant-sso/&#34;&gt;Authentication and Authorization for ElasticSearch: 01 - A Blueprint for Multi-tenant SSO&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-10_authentication-and-authorization-for-elasticsearch-02-basic-sso-with-role-assignment/&#34;&gt;Authentication and Authorization for ElasticSearch: 02 - Basic SSO with Role Assignment&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-12_authentication-and-authorization-for-elasticsearch-03-multi-tenancy-with-keycloak-and-kibana/&#34;&gt;Authentication and Authorization for ElasticSearch: 03 - Multi-Tenancy with KeyCloak and Kibana&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;log-enrichment&#34;&gt;Log Enrichment&lt;/h1&gt;&#xA;&lt;p&gt;Now that the logs are being collected from the required sources, it’s time to start making some sense out of them. This part of the process is called enrichment, and Logstash is the tool of choice in our stack.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ElasticSearch on K8s: 02 — Log Collection with Filebeat</title>
      <link>https://chamila.dev/blog/2019-09-21_elasticsearch-on-k8s-02log-collection-with-filebeat/</link>
      <pubDate>Sat, 21 Sep 2019 05:57:08 +0000</pubDate>
      <guid>https://chamila.dev/blog/2019-09-21_elasticsearch-on-k8s-02log-collection-with-filebeat/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2019-09-21_elasticsearch-on-k8s-02log-collection-with-filebeat_0.jpeg#layoutOutsetCenter&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This is part of a series of short articles on setting up an ELK deployment on K8s.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/elasticsearch-on-k8s-01-basic-design-ecfdaccbb63a&#34;&gt;ElasticSearch on K8s: 01 — Basic Design&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;ElasticSearch on K8s: 02 — Log Collection with Filebeat&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-22_elasticsearch-on-k8s-03-log-enrichment-with-logstash/&#34;&gt;ElasticSearch on K8s: 03 - Log Enrichment with Logstash&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-23_elasticsearch-on-k8s-04-log-storage-and-search-with-elasticsearch/&#34;&gt;ElasticSearch on K8s: 04 - Log Storage and Search with ElasticSearch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-25_elasticsearch-on-k8s-05-visualization-and-production-readying&#34;&gt;ElasticSearch on K8s: 05 - Visualization and Production Readying&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-26_elasticsearch-index-management/&#34;&gt;ElasticSearch Index Management&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2019-11-27_authentication-and-authorization-for-elasticsearch-01-a-blueprint-for-multi-tenant-sso/&#34;&gt;Authentication and Authorization for ElasticSearch: 01 - A Blueprint for Multi-tenant SSO&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-10_authentication-and-authorization-for-elasticsearch-02-basic-sso-with-role-assignment/&#34;&gt;Authentication and Authorization for ElasticSearch: 02 - Basic SSO with Role Assignment&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chamila.dev/post/2020-02-12_authentication-and-authorization-for-elasticsearch-03-multi-tenancy-with-keycloak-and-kibana/&#34;&gt;Authentication and Authorization for ElasticSearch: 03 - Multi-Tenancy with KeyCloak and Kibana&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;log-collection&#34;&gt;Log Collection&lt;/h3&gt;&#xA;&lt;p&gt;The typical task for a log collection tool is to collect a specified set of logs, from a specified set of locations, and offload them to a specified endpoint. Let’s explore these three aspects in detail.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ElasticSearch on K8s: 01 — Basic Design</title>
      <link>https://chamila.dev/blog/2019-09-19_elasticsearch-on-k8s-01basic-design/</link>
      <pubDate>Thu, 19 Sep 2019 20:29:53 +0000</pubDate>
      <guid>https://chamila.dev/blog/2019-09-19_elasticsearch-on-k8s-01basic-design/</guid>
      <description>&lt;h4 id=&#34;a-design-for-a-useful-elk-deployment-onk8s&#34;&gt;A design for a useful ELK deployment on K8s&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2019-09-19_elasticsearch-on-k8s-01basic-design_0.jpeg#layoutOutsetCenter&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Log aggregation in a K8s environment is something I have lightly touched upon previously in multiple occasions. However setting up a minimal but a reliable log aggregation stack on top of K8s could quickly become an evolutionary process with each step improving on the previous one (and of course, everyone thinks they can do log aggregation before they actually start to do so). The following is a pattern for ELK I came across while improving such a stack. While this pattern addresses most common requirements for a native K8s log aggregation stack, there could be better, more suitable patterns that you may have to consider when setting up solutions of your own.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Design a WSO2 Docker Image</title>
      <link>https://chamila.dev/blog/2018-12-24_how-to-design-a-wso2-docker-image/</link>
      <pubDate>Mon, 24 Dec 2018 16:49:16 +0000</pubDate>
      <guid>https://chamila.dev/blog/2018-12-24_how-to-design-a-wso2-docker-image/</guid>
      <description>&lt;h4 id=&#34;what-should-be-your-concerns-for-wso2-ondocker&#34;&gt;What should be your concerns for WSO2 on Docker?&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2018-12-24_how-to-design-a-wso2-docker-image_0.jpeg#layoutTextWidth&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://chamila.dev/thinking-of-moving-your-wso2-deployment-on-to-kubernetes-4e9a77b3377d&#34;&gt;Deploying WSO2 products on Containerized platforms&lt;/a&gt; is a well-tested well-resourced activity. There are various resources available to deploy WSO2 products on &lt;a href=&#34;https://github.com/wso2/docker-apim&#34;&gt;Docker&lt;/a&gt;, &lt;a href=&#34;https://github.com/wso2/kubernetes-apim/&#34;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&#34;https://github.com/wso2/pivotal-cf-apim&#34;&gt;CloudFoundry&lt;/a&gt;, AWS ECS, and &lt;a href=&#34;https://github.com/wso2/dcos-apim&#34;&gt;Apache Mesos&lt;/a&gt;, both officially and unofficially. However, designing a Docker image so that optimal non-functional traits like performance, operational efficiency, and security is a separate topic in itself.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://chamila.dev/blog/img/2018-12-24_how-to-design-a-wso2-docker-image_1.png#layoutTextWidth&#34;&gt;&lt;figcaption&gt;Options available to obtain WSO2 products other than downloading the Zip file itself (https://wso2.com/api-management/install/)&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;p&gt;Docker, being both a DSL and a utility tool for Container image packaging, can be written in several different ways keeping various operational goals in mind. These approaches vary from an all files and configs pre-baked end to another end where almost everything, except a tiny helper layer, being mounted at Container run-time. However, not all these approaches are suitable for a WSO2 deployment, and figuring out these details can be a daunting task, especially at an earlier phase of the deployment. Therefore, it’s important to have a set of common &lt;strong&gt;guidelines&lt;/strong&gt;that can help determine which approach to take in each case. I emphasize the word &lt;strong&gt;guidelines&lt;/strong&gt; because these are only them, not hard rules or must-do’s in every deployment. There is freedom for the user to stray away, as long as the compromises made in doing so are understood.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
